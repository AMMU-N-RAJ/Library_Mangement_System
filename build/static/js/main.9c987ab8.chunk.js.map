{"version":3,"sources":["library-system-visualization.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LibraryDatabaseVisualizer","activeTab","setActiveTab","useState","activeTable","setActiveTable","activeProcedure","setActiveProcedure","showRelationships","setShowRelationships","tables","books","name","primaryKey","columns","type","description","relationships","to","via","authors","book_authors","publishers","categories","book_categories","members","staff","loans","reservations","fines","events","event_attendees","procedures","parameters","steps","triggers","table","timing","code","views","filters","calculations","colors","tableTypes","getPosition","tableName","index","x","y","Math","floor","getPath","source","target","sourcePos","targetPos","handleTableClick","React","createElement","className","onClick","value","onChange","e","Object","keys","map","key","width","height","entries","_ref","rel","idx","d","stroke","strokeWidth","fill","markerEnd","strokeDasharray","includes","_ref2","position","transform","style","cursor","rx","ry","textAnchor","fontWeight","id","viewBox","refX","refY","markerWidth","markerHeight","orient","getTableDetails","column","_tables$rel$to","proc","procedureName","handleProcedureClick","trigger","view","join","getProcedureDetails","procedure","find","p","param","step","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","Error","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.9c987ab8.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst LibraryDatabaseVisualizer = () => {\n  const [activeTab, setActiveTab] = useState('schema');\n  const [activeTable, setActiveTable] = useState('books');\n  const [activeProcedure, setActiveProcedure] = useState(null);\n  const [showRelationships, setShowRelationships] = useState(true);\n\n  // Define database tables with their columns and relationships\n  const tables = {\n    books: {\n      name: 'Books',\n      primaryKey: 'book_id',\n      columns: [\n        { name: 'book_id', type: 'INT', description: 'Primary key - unique identifier for each book' },\n        { name: 'isbn', type: 'VARCHAR(20)', description: 'International Standard Book Number - unique identifier in publishing' },\n        { name: 'title', type: 'VARCHAR(255)', description: 'Book title' },\n        { name: 'publisher_id', type: 'INT', description: 'Foreign key to publishers table' },\n        { name: 'publication_date', type: 'DATE', description: 'Date when the book was published' },\n        { name: 'total_copies', type: 'INT', description: 'Total number of copies owned by the library' },\n        { name: 'available_copies', type: 'INT', description: 'Number of copies currently available for checkout' },\n      ],\n      relationships: [\n        { to: 'publishers', type: 'many-to-one', via: 'publisher_id' },\n        { to: 'book_authors', type: 'one-to-many', via: 'book_id' },\n        { to: 'book_categories', type: 'one-to-many', via: 'book_id' },\n        { to: 'loans', type: 'one-to-many', via: 'book_id' },\n        { to: 'reservations', type: 'one-to-many', via: 'book_id' },\n      ]\n    },\n    authors: {\n      name: 'Authors',\n      primaryKey: 'author_id',\n      columns: [\n        { name: 'author_id', type: 'INT', description: 'Primary key - unique identifier for each author' },\n        { name: 'first_name', type: 'VARCHAR(50)', description: 'Author\\'s first name' },\n        { name: 'last_name', type: 'VARCHAR(50)', description: 'Author\\'s last name' },\n        { name: 'birth_date', type: 'DATE', description: 'Author\\'s date of birth' },\n        { name: 'nationality', type: 'VARCHAR(50)', description: 'Author\\'s nationality' },\n      ],\n      relationships: [\n        { to: 'book_authors', type: 'one-to-many', via: 'author_id' },\n      ]\n    },\n    book_authors: {\n      name: 'Book_Authors',\n      primaryKey: 'book_id, author_id',\n      columns: [\n        { name: 'book_id', type: 'INT', description: 'Part of composite primary key and foreign key to books table' },\n        { name: 'author_id', type: 'INT', description: 'Part of composite primary key and foreign key to authors table' },\n      ],\n      relationships: [\n        { to: 'books', type: 'many-to-one', via: 'book_id' },\n        { to: 'authors', type: 'many-to-one', via: 'author_id' },\n      ]\n    },\n    publishers: {\n      name: 'Publishers',\n      primaryKey: 'publisher_id',\n      columns: [\n        { name: 'publisher_id', type: 'INT', description: 'Primary key - unique identifier for each publisher' },\n        { name: 'name', type: 'VARCHAR(100)', description: 'Publisher name' },\n        { name: 'address', type: 'TEXT', description: 'Publisher address' },\n        { name: 'phone', type: 'VARCHAR(20)', description: 'Publisher phone number' },\n        { name: 'email', type: 'VARCHAR(100)', description: 'Publisher email' },\n      ],\n      relationships: [\n        { to: 'books', type: 'one-to-many', via: 'publisher_id' },\n      ]\n    },\n    categories: {\n      name: 'Categories',\n      primaryKey: 'category_id',\n      columns: [\n        { name: 'category_id', type: 'INT', description: 'Primary key - unique identifier for each category' },\n        { name: 'name', type: 'VARCHAR(50)', description: 'Category name (e.g. Fiction, Science, History)' },\n        { name: 'description', type: 'TEXT', description: 'Category description' },\n      ],\n      relationships: [\n        { to: 'book_categories', type: 'one-to-many', via: 'category_id' },\n      ]\n    },\n    book_categories: {\n      name: 'Book_Categories',\n      primaryKey: 'book_id, category_id',\n      columns: [\n        { name: 'book_id', type: 'INT', description: 'Part of composite primary key and foreign key to books table' },\n        { name: 'category_id', type: 'INT', description: 'Part of composite primary key and foreign key to categories table' },\n      ],\n      relationships: [\n        { to: 'books', type: 'many-to-one', via: 'book_id' },\n        { to: 'categories', type: 'many-to-one', via: 'category_id' },\n      ]\n    },\n    members: {\n      name: 'Members',\n      primaryKey: 'member_id',\n      columns: [\n        { name: 'member_id', type: 'INT', description: 'Primary key - unique identifier for each member' },\n        { name: 'first_name', type: 'VARCHAR(50)', description: 'Member\\'s first name' },\n        { name: 'last_name', type: 'VARCHAR(50)', description: 'Member\\'s last name' },\n        { name: 'email', type: 'VARCHAR(100)', description: 'Member\\'s email address' },\n        { name: 'membership_date', type: 'DATE', description: 'Date when membership started' },\n        { name: 'membership_expiry', type: 'DATE', description: 'Date when membership expires' },\n        { name: 'membership_status', type: 'ENUM', description: 'Status: Active, Expired, or Suspended' },\n      ],\n      relationships: [\n        { to: 'loans', type: 'one-to-many', via: 'member_id' },\n        { to: 'reservations', type: 'one-to-many', via: 'member_id' },\n        { to: 'event_attendees', type: 'one-to-many', via: 'member_id' },\n        { to: 'fines', type: 'one-to-many', via: 'member_id' },\n      ]\n    },\n    staff: {\n      name: 'Staff',\n      primaryKey: 'staff_id',\n      columns: [\n        { name: 'staff_id', type: 'INT', description: 'Primary key - unique identifier for each staff member' },\n        { name: 'first_name', type: 'VARCHAR(50)', description: 'Staff member\\'s first name' },\n        { name: 'last_name', type: 'VARCHAR(50)', description: 'Staff member\\'s last name' },\n        { name: 'position', type: 'VARCHAR(50)', description: 'Job title or position' },\n        { name: 'is_admin', type: 'BOOLEAN', description: 'Whether the staff member has administrative privileges' },\n      ],\n      relationships: [\n        { to: 'loans', type: 'one-to-many', via: 'issued_by_staff_id' },\n        { to: 'loans', type: 'one-to-many', via: 'received_by_staff_id' },\n        { to: 'fines', type: 'one-to-many', via: 'collected_by_staff_id' },\n        { to: 'events', type: 'one-to-many', via: 'organized_by_staff_id' },\n      ]\n    },\n    loans: {\n      name: 'Loans',\n      primaryKey: 'loan_id',\n      columns: [\n        { name: 'loan_id', type: 'INT', description: 'Primary key - unique identifier for each loan' },\n        { name: 'book_id', type: 'INT', description: 'Foreign key to books table' },\n        { name: 'member_id', type: 'INT', description: 'Foreign key to members table' },\n        { name: 'loan_date', type: 'DATE', description: 'Date when the book was borrowed' },\n        { name: 'due_date', type: 'DATE', description: 'Date when the book is due to be returned' },\n        { name: 'return_date', type: 'DATE', description: 'Date when the book was actually returned (NULL if not returned)' },\n        { name: 'returned', type: 'BOOLEAN', description: 'Whether the book has been returned' },\n        { name: 'loan_status', type: 'ENUM', description: 'Status: Active, Returned, Overdue, or Lost' },\n        { name: 'issued_by_staff_id', type: 'INT', description: 'Foreign key to staff table - who issued the book' },\n        { name: 'received_by_staff_id', type: 'INT', description: 'Foreign key to staff table - who received the return' },\n        { name: 'fine_amount', type: 'DECIMAL', description: 'Amount of fine for late return (if any)' },\n      ],\n      relationships: [\n        { to: 'books', type: 'many-to-one', via: 'book_id' },\n        { to: 'members', type: 'many-to-one', via: 'member_id' },\n        { to: 'staff', type: 'many-to-one', via: 'issued_by_staff_id' },\n        { to: 'staff', type: 'many-to-one', via: 'received_by_staff_id' },\n        { to: 'fines', type: 'one-to-many', via: 'loan_id' },\n      ]\n    },\n    reservations: {\n      name: 'Reservations',\n      primaryKey: 'reservation_id',\n      columns: [\n        { name: 'reservation_id', type: 'INT', description: 'Primary key - unique identifier for each reservation' },\n        { name: 'book_id', type: 'INT', description: 'Foreign key to books table' },\n        { name: 'member_id', type: 'INT', description: 'Foreign key to members table' },\n        { name: 'reservation_date', type: 'TIMESTAMP', description: 'Date and time when the reservation was made' },\n        { name: 'expiry_date', type: 'DATE', description: 'Date when the reservation expires' },\n        { name: 'status', type: 'ENUM', description: 'Status: Pending, Fulfilled, Cancelled, or Expired' },\n      ],\n      relationships: [\n        { to: 'books', type: 'many-to-one', via: 'book_id' },\n        { to: 'members', type: 'many-to-one', via: 'member_id' },\n      ]\n    },\n    fines: {\n      name: 'Fines',\n      primaryKey: 'fine_id',\n      columns: [\n        { name: 'fine_id', type: 'INT', description: 'Primary key - unique identifier for each fine' },\n        { name: 'loan_id', type: 'INT', description: 'Foreign key to loans table' },\n        { name: 'member_id', type: 'INT', description: 'Foreign key to members table' },\n        { name: 'fine_amount', type: 'DECIMAL', description: 'Amount of the fine' },\n        { name: 'reason', type: 'TEXT', description: 'Reason for the fine' },\n        { name: 'issue_date', type: 'DATE', description: 'Date when the fine was issued' },\n        { name: 'payment_date', type: 'DATE', description: 'Date when the fine was paid (NULL if not paid)' },\n        { name: 'paid', type: 'BOOLEAN', description: 'Whether the fine has been paid' },\n        { name: 'collected_by_staff_id', type: 'INT', description: 'Foreign key to staff table - who collected the payment' },\n      ],\n      relationships: [\n        { to: 'loans', type: 'many-to-one', via: 'loan_id' },\n        { to: 'members', type: 'many-to-one', via: 'member_id' },\n        { to: 'staff', type: 'many-to-one', via: 'collected_by_staff_id' },\n      ]\n    },\n    events: {\n      name: 'Events',\n      primaryKey: 'event_id',\n      columns: [\n        { name: 'event_id', type: 'INT', description: 'Primary key - unique identifier for each event' },\n        { name: 'title', type: 'VARCHAR(255)', description: 'Event title' },\n        { name: 'description', type: 'TEXT', description: 'Event description' },\n        { name: 'start_date', type: 'DATE', description: 'Date when the event starts' },\n        { name: 'start_time', type: 'TIME', description: 'Time when the event starts' },\n        { name: 'end_date', type: 'DATE', description: 'Date when the event ends' },\n        { name: 'end_time', type: 'TIME', description: 'Time when the event ends' },\n        { name: 'location', type: 'VARCHAR(100)', description: 'Event location' },\n        { name: 'max_attendees', type: 'INT', description: 'Maximum number of attendees allowed' },\n        { name: 'organized_by_staff_id', type: 'INT', description: 'Foreign key to staff table - who organized the event' },\n      ],\n      relationships: [\n        { to: 'staff', type: 'many-to-one', via: 'organized_by_staff_id' },\n        { to: 'event_attendees', type: 'one-to-many', via: 'event_id' },\n      ]\n    },\n    event_attendees: {\n      name: 'Event_Attendees',\n      primaryKey: 'event_id, member_id',\n      columns: [\n        { name: 'event_id', type: 'INT', description: 'Part of composite primary key and foreign key to events table' },\n        { name: 'member_id', type: 'INT', description: 'Part of composite primary key and foreign key to members table' },\n        { name: 'registration_date', type: 'TIMESTAMP', description: 'Date and time when the member registered for the event' },\n        { name: 'attended', type: 'BOOLEAN', description: 'Whether the member actually attended the event' },\n      ],\n      relationships: [\n        { to: 'events', type: 'many-to-one', via: 'event_id' },\n        { to: 'members', type: 'many-to-one', via: 'member_id' },\n      ]\n    }\n  };\n\n  // Define stored procedures with details\n  const procedures = [\n    {\n      name: 'issue_book',\n      parameters: ['book_id', 'member_id', 'staff_id', 'loan_days'],\n      description: 'Issues a book to a member',\n      steps: [\n        'Check if book is available',\n        'Check if member is active',\n        'Calculate due date',\n        'Create loan record',\n        'Trigger updates available_copies in books table'\n      ]\n    },\n    {\n      name: 'return_book',\n      parameters: ['loan_id', 'staff_id'],\n      description: 'Processes a book return',\n      steps: [\n        'Get loan details',\n        'Calculate any fines for late return',\n        'Update loan record to returned status',\n        'Create fine record if needed',\n        'Trigger updates available_copies in books table'\n      ]\n    },\n    {\n      name: 'search_books',\n      parameters: ['title', 'author_name', 'category_name', 'publisher_name', 'available_only'],\n      description: 'Searches for books based on various criteria',\n      steps: [\n        'Join multiple tables (books, authors, categories, publishers)',\n        'Filter by any provided criteria',\n        'Return matching books with related information'\n      ]\n    },\n    {\n      name: 'renew_loan',\n      parameters: ['loan_id', 'renewal_days'],\n      description: 'Extends the due date for an active loan',\n      steps: [\n        'Check if loan is active',\n        'Calculate new due date',\n        'Update loan record with new due date',\n        'Add note about renewal'\n      ]\n    },\n    {\n      name: 'add_book',\n      parameters: ['isbn', 'title', 'publisher_id', 'publication_date', 'edition', 'pages', 'language', 'description', 'shelf_location', 'total_copies', 'author_ids', 'category_ids'],\n      description: 'Adds a new book to the library',\n      steps: [\n        'Insert book record',\n        'Parse author_ids string into individual IDs',\n        'Create book-author associations',\n        'Parse category_ids string into individual IDs',\n        'Create book-category associations'\n      ]\n    }\n  ];\n\n  // Define triggers with details\n  const triggers = [\n    {\n      name: 'after_loan_insert',\n      table: 'loans',\n      timing: 'AFTER INSERT',\n      description: 'Decrements the available_copies count when a book is borrowed',\n      code: `UPDATE books SET available_copies = available_copies - 1 WHERE book_id = NEW.book_id;`\n    },\n    {\n      name: 'after_loan_update',\n      table: 'loans',\n      timing: 'AFTER UPDATE',\n      description: 'Increments the available_copies count when a book is returned',\n      code: `IF NEW.returned = TRUE AND OLD.returned = FALSE THEN\n  UPDATE books SET available_copies = available_copies + 1 WHERE book_id = NEW.book_id;\nEND IF;`\n    }\n  ];\n\n  // Define views with details\n  const views = [\n    {\n      name: 'vw_available_books',\n      description: 'Shows all books that are currently available for checkout',\n      tables: ['books', 'book_authors', 'authors', 'publishers', 'book_categories', 'categories'],\n      filters: ['books.available_copies > 0']\n    },\n    {\n      name: 'vw_overdue_loans',\n      description: 'Shows all loans that are past their due date and not returned',\n      tables: ['loans', 'books', 'members'],\n      filters: ['loans.returned = FALSE', 'loans.due_date < CURRENT_DATE'],\n      calculations: ['DATEDIFF(CURRENT_DATE, loans.due_date) AS days_overdue', 'DATEDIFF(CURRENT_DATE, loans.due_date) * 0.50 AS estimated_fine']\n    },\n    {\n      name: 'vw_book_inventory',\n      description: 'Shows complete inventory information for all books',\n      tables: ['books', 'book_authors', 'authors', 'publishers', 'book_categories', 'categories'],\n      calculations: ['(books.total_copies - books.available_copies) AS checked_out_copies']\n    }\n  ];\n\n  // Colors for entities in the diagram\n  const colors = {\n    core: 'bg-blue-600', // Core tables\n    junction: 'bg-purple-600', // Junction tables\n    transaction: 'bg-green-600', // Transaction tables\n    reference: 'bg-yellow-600', // Reference tables\n    event: 'bg-red-600' // Event-related tables\n  };\n\n  // Categorize tables by type\n  const tableTypes = {\n    books: colors.core,\n    authors: colors.core,\n    publishers: colors.reference,\n    categories: colors.reference,\n    book_authors: colors.junction,\n    book_categories: colors.junction,\n    members: colors.core,\n    staff: colors.core,\n    loans: colors.transaction,\n    reservations: colors.transaction,\n    fines: colors.transaction,\n    events: colors.event,\n    event_attendees: colors.junction\n  };\n\n  // Function to get position for a table in diagram\n  const getPosition = (tableName: string, index?: number) => {\n    const positions = {\n      books: { x: 400, y: 250 },\n      authors: { x: 150, y: 150 },\n      publishers: { x: 650, y: 150 },\n      categories: { x: 650, y: 350 },\n      book_authors: { x: 250, y: 250 },\n      book_categories: { x: 550, y: 300 },\n      members: { x: 250, y: 450 },\n      staff: { x: 550, y: 450 },\n      loans: { x: 400, y: 350 },\n      reservations: { x: 150, y: 350 },\n      fines: { x: 400, y: 450 },\n      events: { x: 650, y: 550 },\n      event_attendees: { x: 400, y: 550 }\n    };\n    return positions[tableName as keyof typeof positions] || { x: 100 + (index % 5) * 150, y: 100 + Math.floor(index / 5) * 100 };\n\n  };\n\n  // Path calculation for relationships\n  const getPath = (source, target) => {\n    const sourcePos = getPosition(source);\n    const targetPos = getPosition(target);\n    \n    return `M${sourcePos.x},${sourcePos.y} C${(sourcePos.x + targetPos.x)/2},${sourcePos.y} ${(sourcePos.x + targetPos.x)/2},${targetPos.y} ${targetPos.x},${targetPos.y}`;\n  };\n\n  const handleTableClick = (tableName) => {\n    setActiveTable(tableName);\n    setActiveProcedure(null);\n  };\n\n  const handleProcedureClick = (procedureName) => {\n    setActiveProcedure(procedureName);\n    setActiveTable(null);\n  };\n\n  const getTableDetails = () => {\n    if (!activeTable) return null;\n    const table = tables[activeTable];\n    \n    return (\n      <div className=\"mt-4\">\n        <h3 className=\"text-lg font-bold mb-2\">{table.name} Table</h3>\n        <p className=\"mb-2\"><span className=\"font-semibold\">Primary Key:</span> {table.primaryKey}</p>\n        \n        <h4 className=\"font-semibold mt-3 mb-1\">Columns:</h4>\n        <table className=\"w-full border-collapse\">\n          <thead>\n            <tr className=\"bg-gray-100\">\n              <th className=\"border p-2 text-left\">Name</th>\n              <th className=\"border p-2 text-left\">Type</th>\n              <th className=\"border p-2 text-left\">Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {table.columns.map((column) => (\n              <tr key={column.name} className=\"border-b\">\n                <td className=\"border p-2\">{column.name}</td>\n                <td className=\"border p-2\">{column.type}</td>\n                <td className=\"border p-2\">{column.description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        \n        <h4 className=\"font-semibold mt-4 mb-1\">Relationships:</h4>\n        <ul className=\"list-disc pl-5\">\n          {table.relationships.map((rel, idx) => (\n            <li key={idx}>\n              <span className=\"font-medium\">{rel.type}</span> relationship with{' '}\n              <button \n                onClick={() => handleTableClick(rel.to)}\n                className=\"text-blue-600 hover:underline\"\n              >\n                {tables[rel.to]?.name || rel.to}\n              </button>\n              {rel.via ? ` via ${rel.via}` : ''}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  const getProcedureDetails = () => {\n    if (!activeProcedure) return null;\n    const procedure = procedures.find(p => p.name === activeProcedure);\n    if (!procedure) return null;\n    \n    return (\n      <div className=\"mt-4\">\n        <h3 className=\"text-lg font-bold mb-2\">Stored Procedure: {procedure.name}</h3>\n        <p className=\"mb-2\">{procedure.description}</p>\n        \n        <h4 className=\"font-semibold mt-3 mb-1\">Parameters:</h4>\n        <ul className=\"list-disc pl-5 mb-4\">\n          {procedure.parameters.map((param, idx) => (\n            <li key={idx}>{param}</li>\n          ))}\n        </ul>\n        \n        <h4 className=\"font-semibold mb-1\">Implementation Steps:</h4>\n        <ol className=\"list-decimal pl-5\">\n          {procedure.steps.map((step, idx) => (\n            <li key={idx}>{step}</li>\n          ))}\n        </ol>\n      </div>\n    );\n  };\n\n  const renderSchemaTab = () => {\n    return (\n      <div className=\"p-4\">\n        <div className=\"flex mb-4 space-x-2\">\n          <button \n            className={`px-3 py-1 rounded ${showRelationships ? 'bg-blue-600 text-white' : 'bg-gray-200'}`}\n            onClick={() => setShowRelationships(!showRelationships)}\n          >\n            {showRelationships ? 'Hide Relationships' : 'Show Relationships'}\n          </button>\n          <select \n            className=\"px-3 py-1 rounded border\"\n            value={activeTable || \"\"}\n            onChange={(e) => {\n              handleTableClick(e.target.value);\n            }}\n          >\n            <option value=\"\">Select a table...</option>\n            {Object.keys(tables).map(tableName => (\n              <option key={tableName} value={tableName}>\n                {tables[tableName].name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"bg-gray-100 p-2 mb-4 rounded\">\n          <div className=\"flex items-center space-x-4 mb-2\">\n            <span className=\"font-semibold\">Table Types:</span>\n            <span className=\"flex items-center\"><div className=\"w-4 h-4 bg-blue-600 rounded-full mr-1\"></div> Core</span>\n            <span className=\"flex items-center\"><div className=\"w-4 h-4 bg-purple-600 rounded-full mr-1\"></div> Junction</span>\n            <span className=\"flex items-center\"><div className=\"w-4 h-4 bg-green-600 rounded-full mr-1\"></div> Transaction</span>\n            <span className=\"flex items-center\"><div className=\"w-4 h-4 bg-yellow-600 rounded-full mr-1\"></div> Reference</span>\n            <span className=\"flex items-center\"><div className=\"w-4 h-4 bg-red-600 rounded-full mr-1\"></div> Event</span>\n          </div>\n        </div>\n\n        <div className=\"relative h-96 border rounded-lg overflow-auto\">\n          <svg width=\"800\" height=\"700\" className=\"bg-white\">\n            {/* Draw relationships */}\n            {showRelationships && Object.entries(tables).map(([tableName, table]) => {\n              return table.relationships.map((rel, idx) => (\n                <path\n                  key={`${tableName}-${rel.to}-${idx}`}\n                  d={getPath(tableName, rel.to)}\n                  stroke=\"#aaa\"\n                  strokeWidth=\"1.5\"\n                  fill=\"none\"\n                  markerEnd=\"url(#arrowhead)\"\n                  strokeDasharray={rel.type.includes('many') ? \"5,5\" : \"\"}\n                />\n              ));\n            })}\n            \n            {/* Draw table nodes */}\n            {Object.entries(tables).map(([tableName, table], index) => {\n              const position = getPosition(tableName, index);\n              return (\n                <g \n                  key={tableName} \n                  transform={`translate(${position.x - 60}, ${position.y - 20})`}\n                  onClick={() => handleTableClick(tableName)}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <rect\n                    width=\"120\"\n                    height=\"40\"\n                    rx=\"5\"\n                    ry=\"5\"\n                    fill={tableTypes[tableName]}\n                    stroke={activeTable === tableName ? '#000' : 'none'}\n                    strokeWidth={activeTable === tableName ? '2' : '0'}\n                  />\n                  <text\n                    x=\"60\"\n                    y=\"25\"\n                    textAnchor=\"middle\"\n                    fill=\"white\"\n                    fontWeight={activeTable === tableName ? 'bold' : 'normal'}\n                  >\n                    {table.name}\n                  </text>\n                </g>\n              );\n            })}\n            \n            {/* SVG definitions */}\n            <defs>\n              <marker\n                id=\"arrowhead\"\n                viewBox=\"0 0 10 10\"\n                refX=\"5\"\n                refY=\"5\"\n                markerWidth=\"6\"\n                markerHeight=\"6\"\n                orient=\"auto-start-reverse\"\n              >\n                <path d=\"M 0 0 L 10 5 L 0 10 z\" fill=\"#aaa\" />\n              </marker>\n            </defs>\n          </svg>\n        </div>\n        \n        {getTableDetails()}\n      </div>\n    );\n  };\n\n  const renderOperationsTab = () => {\n    return (\n      <div className=\"p-4\">\n        <div className=\"mb-4\">\n          <h3 className=\"text-lg font-bold mb-2\">Stored Procedures</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {procedures.map(proc => (\n              <div \n                key={proc.name}\n                className={`p-3 border rounded cursor-pointer hover:bg-blue-50 ${activeProcedure === proc.name ? 'bg-blue-100 border-blue-500' : ''}`}\n                onClick={() => handleProcedureClick(proc.name)}\n              >\n                <h4 className=\"font-semibold\">{proc.name}</h4>\n                <p className=\"text-sm text-gray-600\">{proc.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"mb-4\">\n          <h3 className=\"text-lg font-bold mb-2\">Triggers</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {triggers.map(trigger => (\n              <div \n                key={trigger.name}\n                className=\"p-3 border rounded\"\n              >\n                <h4 className=\"font-semibold\">{trigger.name}</h4>\n                <p className=\"text-sm text-gray-600 mb-1\">{trigger.timing} on {trigger.table}</p>\n                <p className=\"text-sm\">{trigger.description}</p>\n                <pre className=\"mt-2 bg-gray-100 p-2 rounded text-xs overflow-x-auto\">\n                  {trigger.code}\n                </pre>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"mb-4\">\n          <h3 className=\"text-lg font-bold mb-2\">Views</h3>\n          <div className=\"grid grid-cols-1 gap-4\">\n            {views.map(view => (\n              <div \n                key={view.name}\n                className=\"p-3 border rounded\"\n              >\n                <h4 className=\"font-semibold\">{view.name}</h4>\n                <p className=\"text-sm\">{view.description}</p>\n                <div className=\"mt-2 text-sm\">\n                  <p><span className=\"font-medium\">Tables:</span> {view.tables.join(', ')}</p>\n                  {view.filters && (\n                    <p><span className=\"font-medium\">Filters:</span> {view.filters.join(', ')}</p>\n                  )}\n                  {view.calculations && (\n                    <p><span className=\"font-medium\">Calculations:</span> {view.calculations.join(', ')}</p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {getProcedureDetails()}\n      </div>\n    );\n  };\n\n  const renderWorkflowTab = () => {\n    return (\n      <div className=\"p-4\">\n        <h3 className=\"text-lg font-bold mb-4\">Common Library Workflows</h3>\n        \n        <div className=\"mb-6 border rounded-lg p-4 bg-blue-50\">\n          <h4 className=\"font-bold text-lg mb-2\">Book Checkout Process</h4>\n          <div className=\"relative\">\n            {/* Workflow diagram */}\n            <div className=\"flex flex-col items-center\">\n              {/* Step 1 */}\n              <div className=\"mb-8 text-center\">\n                <div className=\"w-32 p-2 bg-blue-600 text-white rounded mx-auto\">\n                  Member Request\n                </div>\n                <div className=\"text-sm mt-1\">Member requests to borrow a book</div>\n              </div>\n              \n              {/* Arrow */}\n              <div className=\"h-8 w-0.5 bg-gray-400 -mt-6 mb-2\"></div>\n              \n              {/* Step 2 */}\n              <div className=\"mb-8 text-center\">\n                <div className=\"w-32 p-2 bg-blue-600 text-white rounded mx-auto\">\n                  Check Availability\n                </div>\n                <div className=\"text-sm mt-1\">\n                  <code>issue_book</code> procedure checks if book is available\n                </div>\n              </div>\n              \n              {/* Arrow */}\n              <div className=\"h-8 w-0.5 bg-gray-400 -mt-6 mb-2\"></div>\n              \n              {/* Step 3 */}\n              <div className=\"mb-8 text-center\">\n                <div className=\"w-40 p-2 bg-blue-600 text-white rounded mx-auto\">\n                  Book Issued\n                </div>\n                <div className=\"text-sm mt-1\">\n                  Creates loan record and calls <code>after_loan_insert</code> trigger\n                </div>\n              </div>\n              \n              {/* Arrow */}\n              <div className=\"h-8 w-0.5 bg-gray-400 -mt-6 mb-2\"></div>\n              \n              {/* Step 4 */}\n              <div className=\"text-center\">\n                <div className=\"w-40 p-2 bg-blue-600 text-white rounded mx-auto\">\n                  Available Copies Updated\n                </div>\n                <div className=\"text-sm mt-1\">\n                  Trigger decrements available_copies in books table\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"mb-6 border rounded-lg p-4 bg-green-50\">\n          <h4 className=\"font-bold text-lg mb-2\">Book Return Process</h4>\n          <div className=\"relative\">\n            <div className=\"flex flex-col items-center\">\n              {/* Step 1 */}\n              <div className=\"mb-8 text-center\">\n                <div className=\"w-32 p-2 bg-green-600 text-white rounded mx-auto\">\n                  Book Return\n                </div>\n                <div className=\"text-sm mt-1\">Member returns a book</div>\n              </div>\n              \n              {/* Arrow */}\n              <div className=\"h-8 w-0.5 bg-gray-400 -mt-6 mb-2\"></div>\n              \n              {/* Step 2 */}\n              <div className=\"mb-8 text-center\">\n                <div className=\"w-32 p-2 bg-green-600 text-white rounded mx-auto\">\n                  Check Due Date\n                </div>\n                <div className=\"text-sm mt-1\">\n                  <code>return_book</code> procedure checks if return is late\n                </div>\n              </div>\n              \n              {/* Arrow */}\n              <div className=\"h-8 w-0.5 bg-gray-400 -mt-6 mb-2\"></div>\n              \n              {/* Step 3 with branching */}\n              <div className=\"mb-12 text-center\">\n                <div className=\"w-40 p-2 bg-green-600 text-white rounded mx-auto\">\n                  Late Return?\n                </div>\n                <div className=\"flex justify-center mt-8\">\n                  <div className=\"text-center mx-8\">\n                    <div className=\"w-24 p-2 bg-red-500 text-white rounded mx-auto\">\n                      Yes\n                    </div>\n                    <div className=\"h-8 w-0.5 bg-gray-400 mx-auto mt-2 mb-2\"></div>\n                    <div className=\"w-28 p-2 bg-red-500 text-white rounded mx-auto\">\n                      Create Fine\n                    </div>\n                  </div>\n                  <div className=\"text-center mx-8\">\n                    <div className=\"w-24 p-2 bg-green-500 text-white rounded mx-auto\">\n                      No\n                    </div>\n                    <div className=\"h-8 w-0.5 bg-gray-400 mx-auto mt-2 mb-2\"></div>\n                    <div className=\"w-28 p-2 bg-green-500 text-white rounded mx-auto\">\n                      No Fine\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Arrow */}\n              <div className=\"h-8 w-0.5 bg-gray-400 -mt-8 mb-2\"></div>\n              \n              {/* Step 4 */}\n              <div className=\"mb-8 text-center\">\n                <div className=\"w-40 p-2 bg-green-600 text-white rounded mx-auto\">\n                  Update Loan Status\n                </div>\n                <div className=\"text-sm mt-1\">\n                  Mark loan as returned, update return_date\n                </div>\n              </div>\n              \n              {/* Arrow */}\n              <div className=\"h-8 w-0.5 bg-gray-400 -mt-6 mb-2\"></div>\n              \n              {/* Step 5 */}\n              <div className=\"text-center\">\n                <div className=\"w-40 p-2 bg-green-600 text-white rounded mx-auto\">\n                  Update Book Availability\n                </div>\n                <div className=\"text-sm mt-1\">\n                  <code>after_loan_update</code> trigger increments available_copies\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\n      <div className=\"bg-gradient-to-r from-blue-700 to-purple-700 text-white p-4\">\n        <h2 className=\"text-xl font-bold\">Library Management System Database Visualization</h2>\n        <p className=\"text-sm opacity-90\">Interactive exploration of database structure and functionality</p>\n        <p className=\"text-sm mt-1 font-medium\">Author: ammunraj</p>\n      </div>\n      \n      <div className=\"border-b\">\n        <nav className=\"flex\">\n          <button\n            className={`px-4 py-2 font-medium ${activeTab === 'schema' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-500'}`}\n            onClick={() => setActiveTab('schema')}\n          >\n            Database Schema\n          </button>\n          <button\n            className={`px-4 py-2 font-medium ${activeTab === 'operations' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-500'}`}\n            onClick={() => setActiveTab('operations')}\n          >\n            Procedures & Triggers\n          </button>\n          <button\n            className={`px-4 py-2 font-medium ${activeTab === 'workflow' ? 'border-b-2 border-blue-600 text-blue-600' : 'text-gray-500'}`}\n            onClick={() => setActiveTab('workflow')}\n          >\n            Library Workflows\n          </button>\n        </nav>\n      </div>\n      \n      <div className=\"bg-white\">\n        {activeTab === 'schema' && renderSchemaTab()}\n        {activeTab === 'operations' && renderOperationsTab()}\n        {activeTab === 'workflow' && renderWorkflowTab()}\n      </div>\n    </div>\n  );\n};\n\nexport default LibraryDatabaseVisualizer;\n","import React from 'react';\nimport './App.css';\nimport LibraryDatabaseVisualizer from './library-system-visualization';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LibraryDatabaseVisualizer />\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Get the root element\nconst rootElement = document.getElementById('root');\n\n// Make sure rootElement exists\nif (!rootElement) throw new Error('Failed to find the root element');\n\n// Create a root\nconst root = createRoot(rootElement);\n\n// Render your app\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\nreportWebVitals();"],"sourceRoot":""}